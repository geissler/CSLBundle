<?php

namespace geissler\CSLBundle\Services;

require_once dirname(__FILE__) . '/../../../../../Services/Layout.php';

/**
 * Test class for Layout.
 * Generated by PHPUnit on 2012-03-31 at 04:13:30.
 */
class LayoutTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Layout
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Layout;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers geissler\CSLBundle\Services\Layout::setType
     * @todo Implement testSetType().
     */
    public function testSetType() {
        $this->assertTrue($this->object->setType('citation'));
    }

    /**
     * @covers geissler\CSLBundle\Services\Layout::init
     * @todo Implement testInit().
     */
    public function testInit() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers geissler\CSLBundle\Services\Layout::render
     * @todo Implement testRender().
     */
    public function testRenderCitationNumberRangesWithAffixes() {
        $str_Style  =   "<style \n      xmlns=\"http://purl.org/net/xbiblio/csl\"\n      class=\"in-text\"\n      version=\"1.0\">\n  <info>\n    <id />\n    <title />\n    <updated>2009-08-10T04:49:00+09:00</updated>\n  </info>\n  <citation>\n <layout delimiter=\",\" font-weight=\"bold\" prefix=\"(\" suffix=\")\">\n      <text prefix=\"[\" suffix=\"]\" variable=\"title\" />\n    </layout>\n  </citation>\n</style>";
        $obj_Doc    =   new \DOMDocument();
        $obj_Doc->loadXML($str_Style);        
        $this->object->setType('citation');
        $this->object->init($obj_Doc->getElementsByTagName('layout')->item(0));
        
        $arr_Data   =   array(
                            array(
                                "id" =>  "ITEM-1", 
                                "title" =>  "Paper 1", 
                                "type" =>  "book"), 
                            array(
                                "id" =>  "ITEM-2", 
                                "title" =>  "Paper 2", 
                                "type" =>  "book"), 
                            array(
                                "id" =>  "ITEM-3", 
                                "title" =>  "Paper 3", 
                                "type" =>  "book"));
        $this->assertEquals('<span style="font-weight: bold">([Paper 1],[Paper 2],[Paper 3])</span>', $this->object->render($arr_Data));
    }

}

?>
