<?php

namespace geissler\CSLBundle\Services;

require_once dirname(__FILE__) . '/../../../../../Services/Text.php';

/**
 * Test class for Text.
 * Generated by PHPUnit on 2012-03-31 at 03:26:27.
 */
class TextTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Text
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Text;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers geissler\CSLBundle\Services\Text::init
     * @todo Implement testInit().
     */
    public function testInit() {
        $str_Style  =   "<style xmlns=\"http://purl.org/net/xbiblio/csl\" class=\"in-text\" version=\"1.0\"><layout delimiter=\"; \" prefix=\"(\" suffix=\")\"><text variable=\"title\" form=\"short\" font-style=\"italic\"/></layout></style>";
        $obj_Doc    =   new \DOMDocument();
        $obj_Doc->loadXML($str_Style);
        $this->object->init($obj_Doc->getElementsByTagName('layout')->item(0));
        '<text variable=\"title\" form=\"short\" font-style=\"italic\"/>';
    }

    public function testRenderSimpleItalicVariable() {
        $str_Style  =   "<style xmlns=\"http://purl.org/net/xbiblio/csl\" class=\"in-text\" version=\"1.0\"><layout><text variable=\"title\" form=\"short\" font-style=\"italic\"/></layout></style>";
        $obj_Doc    =   new \DOMDocument();
        $obj_Doc->loadXML($str_Style);
        $this->object->init($obj_Doc->getElementsByTagName('layout')->item(0)->firstChild);
        $this->assertEquals('<span style="font-style: italic">King of my castle</span>', $this->object->render(array('title' => 'King of my castle')));
    }
    
    public function testRenderTerm() {
        $str_Layout =   "<locale xml:lang=\"en\"><terms><term name=\"and others\">weird term</term></terms></locale>";
        $obj_Locale =   new Locale();
        $obj_Locale->loadContent($str_Layout);
        Registry::setLocale($obj_Locale);
        
        $str_Style  =   "<style xmlns=\"http://purl.org/net/xbiblio/csl\" class=\"note\" version=\"1.0\"><citation><layout><text term=\"and others\" prefix=\"(\" suffix=\")\"/></layout></citation></style>";
        $obj_Doc    =   new \DOMDocument();
        $obj_Doc->loadXML($str_Style);
        $this->object->init($obj_Doc->getElementsByTagName('layout')->item(0)->firstChild);
        $this->assertEquals('(weird term)', $this->object->render(array('title' => 'King of my castle')));
    }

    public function testRenderMultipleTerm() {
        $str_Layout =   "<locale xml:lang=\"en\"><terms><term name=\"and others\">weird term<single>Auflage</single><multiple>Auflagen</multiple></term></terms></locale>";
        $obj_Locale =   new Locale();
        $obj_Locale->loadContent($str_Layout);
        Registry::setLocale($obj_Locale);
        
        $str_Style  =   "<style xmlns=\"http://purl.org/net/xbiblio/csl\" class=\"note\" version=\"1.0\"><citation><layout><text term=\"and others\" prefix=\"(\" suffix=\")\" plural=\"true\"/></layout></citation></style>";
        $obj_Doc    =   new \DOMDocument();
        $obj_Doc->loadXML($str_Style);
        $this->object->init($obj_Doc->getElementsByTagName('layout')->item(0)->firstChild);
        $this->assertEquals('(Auflagen)', $this->object->render(array('title' => 'King of my castle')));
    }
}

?>
