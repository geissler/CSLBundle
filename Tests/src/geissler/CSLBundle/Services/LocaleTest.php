<?php

namespace geissler\CSLBundle\Services;

require_once dirname(__FILE__) . '/../../../../../Services/Locale.php';

/**
 * Test class for Locale.
 * Generated by PHPUnit on 2012-03-31 at 12:07:57.
 */
class LocaleTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Locale
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Locale;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers geissler\CSLBundle\Services\Locale::load
     */
    public function testLoad() {
        $this->assertTrue($this->object->load('de-DE'));
    }
    
    public function testLoad1() {
        $this->assertTrue($this->object->load('de'));
    }
    
    public function testLoad2() {
        $this->assertTrue($this->object->load('fr'));
    }
    
    /**
     * @covers geissler\CSLBundle\Services\Locale::loadContent
     */
    public function testLoadContent() {
        $this->assertTrue($this->object->loadContent('<locale xml:lang="en"><terms><term name="and others">weird term</term></terms></locale>'));        
    }
    
    public function testDoNotLoadContent() {
        $this->setExpectedException('Exception');
        $this->assertFalse($this->object->loadContent('e'));
    }

    /**
     * @covers geissler\CSLBundle\Services\Locale::getTerm
     */
    public function testGetTerm() {
        $this->assertTrue($this->object->load('de-DE'));
        $this->assertEquals('zugegriffen', $this->object->getTerm('accessed'));
    }
    
    public function testGetTermShort() {
        $this->assertTrue($this->object->load('de-DE'));
        $this->assertEquals('ca.', $this->object->getTerm('circa', 'short'));
    }
    
    public function testGetTerm2() {
        $this->assertTrue($this->object->load('de-DE'));
        $this->assertEquals('Auflage', $this->object->getTerm('edition'));
    }
    
    public function testGetTermPlural() {
        $this->assertTrue($this->object->load('de-DE'));
        $this->assertEquals('Auflagen', $this->object->getTerm('edition', '', true));
    }
    
    public function testGetTermShortAndPlural() {
        $this->assertTrue($this->object->load('de-DE'));
        $this->assertEquals('s.vv.', $this->object->getTerm('sub verbo', 'short', true));
    }

    /**
     * @covers geissler\CSLBundle\Services\Locale::getDate
     * @todo Implement testGetDate().
     */
    public function testGetDate() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers geissler\CSLBundle\Services\Locale::getPunctuation
     */
    public function testGetPunctuation() {
        $this->assertTrue($this->object->load('de-DE'));
        $this->assertFalse($this->object->getPunctuation());
    }

}

?>
